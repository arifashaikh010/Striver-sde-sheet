//----------------------------------- <= Is "VVIMP" -------------------------------------------
//#Finally Solved :)
//condition : 
//only one rotation allowed
//all elements <= nums[i-1]<=nums[i]
//Also last element <= first element i.e. nums[nums.length-1]<=nums[0]

class Solution {
    public boolean check(int[] nums) {
        int rotate=0;
        for(int i=1;i<nums.length;i++){
            if(nums[i-1]<=nums[i]){
                
            }else{
                rotate++;
            }
        }
        if(rotate==0 || rotate==1 && nums[nums.length-1]<=nums[0]){
            return true;
        }else{
            return false;
        }
    }
}

/*
Input: nums = [3,4,5,1,2]
Output: true
Explanation: [1,2,3,4,5] is the original sorted array.
You can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2].

Input: nums = [2,1,3,4]
Output: false
Explanation: There is no sorted array once rotated that can make nums.

Input: nums = [1,2,3]
Output: true
Explanation: [1,2,3] is the original sorted array.
You can rotate the array by x = 0 positions (i.e. no rotation) to make nums.
*/
